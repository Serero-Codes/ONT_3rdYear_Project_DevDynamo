@model ONT_3rdyear_Project.WardAdminViewModels.AdmissionStep1ViewModel
@{
    ViewData["Title"] = "Admit Patient - Step 1";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
<link href="~/css/WardAdmin/AdmissionSteps.css" rel="stylesheet" asp-append-version="true">

<div class="admission-wrapper">
    <!-- Floating background elements -->
    <div class="floating-elements">
        <div class="floating-element"></div>
        <div class="floating-element"></div>
        <div class="floating-element"></div>
    </div>

    <div class="container">
        <!-- Header Navigation -->
        <div class="admission-header">
            <div class="back-button">
                <a asp-action="AllPatients" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to Patients
                </a>
            </div>
        </div>

        <!-- Progress Indicator -->
        <div class="progress-container">
            <div class="progress-steps">
                <div class="progress-step">
                    <div class="step-number active">1</div>
                    <span class="step-label active">Basic Info</span>
                </div>
                <div class="step-connector"></div>
                <div class="progress-step">
                    <div class="step-number">2</div>
                    <span class="step-label">Allergies</span>
                </div>
                <div class="step-connector"></div>
                <div class="progress-step">
                    <div class="step-number">3</div>
                    <span class="step-label">Medical History</span>
                </div>
                <div class="step-connector"></div>
                <div class="progress-step">
                    <div class="step-number">4</div>
                    <span class="step-label">Summary</span>
                </div>
            </div>
        </div>

        <!-- Form Card -->
        <div class="admission-card">
            @if (TempData["Error"] != null)
            {
                <div class="alert-container">
                    <div class="alert alert-danger">
                        <div class="alert-content">
                            <i class="bi bi-exclamation-triangle-fill"></i>
                            <div>@TempData["Error"]</div>
                        </div>
                        <button type="button" class="alert-close" onclick="this.parentElement.style.display='none'">
                            <i class="bi bi-x-lg"></i>
                        </button>
                    </div>
                </div>
            }
            <div class="card-header">
                <h4>
                    <i class="bi bi-hospital-fill"></i>
                    Step 1: Basic Admission Information
                </h4>
            </div>
            <div class="card-body">
                <form asp-action="AdmitPatientStep1" method="post" id="admissionForm">
                    @Html.AntiForgeryToken()

                    <div class="form-grid">
                        <!-- Patient Selection -->
                        <div class="form-group">
                            <label asp-for="PatientID" class="form-label required">
                                <i class="bi bi-person"></i>
                                Select Patient
                            </label>
                            <select asp-for="PatientID" class="form-select" required>
                                <option value="">-- Select Patient --</option>
                                @foreach (var patient in Model.Patients)
                                {
                                    <option value="@patient.Value">@patient.Text</option>
                                }
                            </select>
                            <span asp-validation-for="PatientID" class="field-validation"></span>
                            <small class="form-helper">
                                <i class="bi bi-info-circle"></i> Only patients not currently admitted are shown
                            </small>
                        </div>

                        <!-- Ward Selection -->
                        <div class="form-group">
                            <label asp-for="WardID" class="form-label required">
                                <i class="bi bi-building"></i>
                                Assign Ward
                            </label>
                            <select asp-for="WardID" asp-items = "Model.Wards" class="form-select" id="wardDropdown" required>
								<option value="">--Select Ward--</option>
                            </select>

                            <span asp-validation-for="WardID" class="field-validation"></span>
                            <small class="form-helper">
                                <i class="bi bi-info-circle"></i> Select the appropriate ward for the patient
                            </small>
                        </div>

                        <!-- Bed Selection -->
                        <div class="form-group">
                            <label asp-for="BedID" class="form-label required">
                                <i class="bi bi-bed"></i>
                                Assign Bed
                            </label>
                            <select asp-for="BedID" class="form-select" id="bedDropdown" required>
                                <option value="">--Select Bed--</option>
                            </select>
                            <span asp-validation-for="BedID" class="field-validation"></span>
                            <small class="form-helper">
                                <i class="bi bi-info-circle"></i> Only available beds are shown
                            </small>
                        </div>                       

                        <!-- Doctor Selection -->
                        <div class="form-group">
                            <label asp-for="DoctorID" class="form-label required">
                                <i class="bi bi-person-badge"></i>
                                Assign Doctor
                            </label>
                            <select asp-for="DoctorID" class="form-select" required>
                                <option value="">-- Select Doctor --</option>
                                @foreach (var doctor in Model.Doctors)
                                {
                                    <option value="@doctor.Value">@doctor.Text</option>
                                }
                            </select>
                            <span asp-validation-for="DoctorID" class="field-validation"></span>
                            <small class="form-helper">
                                <i class="bi bi-info-circle"></i> Only doctors are shown in the list
                            </small>
                        </div>
                    </div>

                    <!-- Admission Date -->
                    <div class="form-group">
                        <label asp-for="AdmissionDate" class="form-label required">
                            <i class="bi bi-calendar-date"></i>
                            Admission Date
                        </label>
                        <input asp-for="AdmissionDate" class="form-control" type="date" required />
                        <span asp-validation-for="AdmissionDate" class="field-validation"></span>
                    </div>

                    <!-- Reason for Admission -->
                    <div class="form-group">
                        <label asp-for="ReasonForAdmission" class="form-label required">
                            <i class="bi bi-clipboard-plus"></i>
                            Reason for Admission
                        </label>
                        <textarea asp-for="ReasonForAdmission" class="form-textarea" rows="3"
                                  placeholder="Enter the primary reason for admission..." required></textarea>
                        <span asp-validation-for="ReasonForAdmission" class="field-validation"></span>
                        <small class="form-helper">
                            <i class="bi bi-info-circle"></i> Describe the main symptoms or condition requiring admission
                        </small>
                    </div>

                    <!-- Additional Notes -->
                    <div class="form-group">
                        <label asp-for="Notes" class="form-label">
                            <i class="bi bi-journal-text"></i>
                            Additional Notes
                        </label>
                        <textarea asp-for="Notes" class="form-textarea" rows="2"
                                  placeholder="Any additional information or special instructions..."></textarea>
                        <span asp-validation-for="Notes" class="field-validation"></span>
                        <small class="form-helper">
                            <i class="bi bi-info-circle"></i> Optional notes for the medical team
                        </small>
                    </div>

                    <!-- Discharge Date Information -->
                    <div class="form-group">
                        <label class="form-label">
                            <i class="bi bi-calendar-x"></i>
                            Discharge Information
                        </label>
                        <input class="form-control readonly-field"
                               value="Discharge date will be set upon patient discharge"
                               readonly />
                        <small class="form-helper">
                            <i class="bi bi-info-circle"></i> Discharge date cannot be set during admission
                        </small>
                    </div>

                    <!-- Form Actions -->
                    <div class="form-actions">
                        <a asp-action="AllPatients" class="btn btn-secondary">
                            <i class="bi bi-x-circle"></i>
                            Cancel
                        </a>
                        <button type="submit" class="btn btn-primary">
                            Next: Add Allergies
                            <i class="bi bi-arrow-right"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Auto-hide alerts after 5 seconds
         setTimeout(function() {
            document.querySelectorAll('.alert').forEach(alert => {
                alert.style.opacity = '0';
                alert.style.transition = 'opacity 0.5s ease';
                setTimeout(() => alert.remove(), 500);
            });
        }, 5000);

        //bed dropdown
            document.getElementById("wardDropdown").addEventListener("change", function () {
            var wardId = this.value;
            var bedDropdown = document.getElementById("bedDropdown");

            bedDropdown.innerHTML = '<option value="">--Select Bed--</option>';

            if (wardId) {
                fetch(`/WardAdmin/GetBedsByWard?wardId=${wardId}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(function (bed) {
                            var option = document.createElement("option");
                            option.value = bed.value;
                            option.text = bed.text;
                            bedDropdown.appendChild(option);
                        });
                    });
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('admissionForm');
          
       
            // Set today's date as default for admission date
            const today = new Date().toISOString().split('T')[0];
            document.querySelector('input[type="date"]').value = today;

            // Real-time validation
            const validateField = (field) => {
                if (field.value.trim()) {
                    field.classList.remove('is-invalid');
                    field.classList.add('is-valid');
                } else if (field.hasAttribute('required')) {
                    field.classList.remove('is-valid');
                    field.classList.add('is-invalid');
                }
            };

            document.querySelectorAll('select, textarea, input').forEach(field => {
                field.addEventListener('blur', () => validateField(field));
                field.addEventListener('input', () => {
                    if (field.classList.contains('is-invalid') && field.value.trim()) {
                        field.classList.remove('is-invalid');
                    }
                });
            });

            // Form submission handling
            form.addEventListener('submit', function(e) {
                let isValid = true;
                const requiredFields = this.querySelectorAll('select[required], textarea[required], input[required]');

                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        field.classList.add('is-invalid');
                        isValid = false;
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    const firstInvalid = this.querySelector('.is-invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                    }
                }
            });
        });
    </script>
}
