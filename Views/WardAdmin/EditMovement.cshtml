@model ONT_3rdyear_Project.Models.Movement
@{
    ViewData["Title"] = "Edit Patient Movement";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
<link href="~/css/WardAdmin/EditMovement.css" rel="stylesheet" />

<div class="edit-movement-container">
    <div class="edit-movement-card">
        <!-- Header Section -->
        <div class="edit-movement-header">
            <div class="header-content">
                <i class="bi bi-arrow-left-right header-icon"></i>
                <div>
                    <h1 class="header-title">Edit Patient Movement</h1>
                    <p class="header-subtitle">Update movement details for @Model.Patient.FirstName @Model.Patient.LastName</p>
                </div>
            </div>
            <a asp-action="MovementHistory" asp-route-patientId="@Model.PatientID" class="btn btn-outline-secondary back-btn">
                <i class="bi bi-arrow-left"></i> Back to History
            </a>
        </div>

        <!-- Patient Info Card -->
        <div class="patient-info-card">
            <div class="patient-info-content">
                <div class="patient-avatar">
                    @if (Model.Patient.Gender == "Male")
                    {
                        <i class="bi bi-gender-male text-primary"></i>
                    }
                    else if (Model.Patient.Gender == "Female")
                    {
                        <i class="bi bi-gender-female text-danger"></i>
                    }
                    else
                    {
                        <i class="bi bi-gender-ambiguous text-secondary"></i>
                    }
                </div>
                <div class="patient-details">
                    <h3 class="patient-name">@Model.Patient.FirstName @Model.Patient.LastName</h3>
                    <div class="patient-meta">
                        <span class="movement-time">Original: @Model.TimeStamp.ToString("dd MMM yyyy HH:mm")</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Alert Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle-fill me-2"></i>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Movement Form -->
        <div class="movement-form-container">
            <form asp-action="EditMovement" method="post">
                <input type="hidden" asp-for="MovementID" />
                <input type="hidden" asp-for="PatientID" />
                <input type="hidden" asp-for="WardID" />
                <input type="hidden" asp-for="BedID" />

                <!-- Visual Movement Indicator -->
                <div class="movement-indicator">
                    <div class="location-from">
                        <div class="location-label">From Location</div>
                        <div class="location-value">@Model.FromLocation</div>
                    </div>

                    <div class="movement-arrow">
                        <i class="bi bi-arrow-right"></i>
                    </div>

                    <div class="location-to">
                        <div class="location-label">To Location</div>
                        <div class="location-value" id="toLocationPreview">@Model.ToLocation</div>
                    </div>
                </div>

                <!-- From Location (readonly) -->
                <div class="form-group">
                    <label asp-for="FromLocation" class="form-label">From Location</label>
                    <input asp-for="FromLocation" class="form-control" readonly />
                    <small class="form-text text-muted">Original location cannot be modified</small>
                </div>

                <!-- To Location -->
                <div class="form-group">
                    <label asp-for="ToLocation" class="form-label">To Location *</label>
                    <select asp-for="ToLocation" class="form-select" required id="toLocationSelect">
                        <option value="">-- Select Destination --</option>
                        @foreach (var destination in ViewBag.Destinations)
                        {
                            <option value="@destination" selected="@(Model.ToLocation == destination)">@destination</option>
                        }
                    </select>
                    <span asp-validation-for="ToLocation" class="text-danger"></span>
                </div>

                <!-- Timestamp -->
                <div class="form-group">
                    <label asp-for="TimeStamp" class="form-label">Movement Time</label>
                    <input asp-for="TimeStamp" type="datetime-local" class="form-control"
                           value="@Model.TimeStamp.ToString("yyyy-MM-ddTHH:mm")" />
                    <span asp-validation-for="TimeStamp" class="text-danger"></span>
                </div>

                <!-- Action Buttons -->
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Save Changes
                    </button>
                    <a asp-action="MovementHistory" asp-route-patientId="@Model.PatientID" class="btn btn-outline-secondary">
                        <i class="bi bi-x-circle"></i> Cancel
                    </a>
                    <button type="reset" class="btn btn-outline-danger">
                        <i class="bi bi-arrow-counterclockwise"></i> Reset
                    </button>
                </div>
            </form>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const toLocationSelect = document.getElementById('toLocationSelect');
            const toLocationPreview = document.getElementById('toLocationPreview');

            // Update preview when selection changes
            toLocationSelect.addEventListener('change', function() {
                toLocationPreview.textContent = this.value || 'Select destination';
            });

            // Form validation
            const form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                if (!toLocationSelect.value) {
                    e.preventDefault();
                    toLocationSelect.focus();
                    toLocationSelect.style.borderColor = 'var(--danger-red)';
                }
            });

            // Remove error indication when user starts interacting
            toLocationSelect.addEventListener('input', function() {
                this.style.borderColor = '';
            });
        });
    </script>
}