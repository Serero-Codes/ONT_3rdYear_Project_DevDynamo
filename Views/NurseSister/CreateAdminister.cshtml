@model ONT_3rdyear_Project.ViewModels.AdministerMedicationViewModel

@{
    ViewData["Title"] = "Administer Medication";
}

@{
    if (Model?.MedicationList == null)
    {
        <div class="alert alert-danger">MedicationList is NULL!</div>
    }


}
<div class="medication-form-container">
    <div class="container">
        <div class="form-header">
            <h1 class="page-title">
                <i class="fas fa-pills" style="color:#17a2b8;margin-right:15px;"></i>
                Administer Medication
            </h1>
        </div>

        <div class="medication-form-card">

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }
            <form asp-action="CreateAdminister" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="PatientId" />

                <div class="form-group-custom">
                    <label class="form-label-custom">Patient</label>
                    <input type="text" class="form-control" value="@Model.PatientName" readonly />
                    @if (Model.PatientAllergies != null && Model.PatientAllergies.Any())
                    {
                        <div class="safety-warning">
                            <h4><i class="fas fa-exclamation-triangle" style="margin-right:8px;"></i>Allergy Warning!</h4>
                            <p>Patient has the following allergies:</p>
                            <ul>
                                @foreach (var allergy in Model.PatientAllergies)
                                {
                                    <li>@allergy</li>
                                }
                            </ul>
                        </div>
                    }
                </div>

                <div class="form-group-custom">
                    <label asp-for="MedicationId" class="form-label-custom">Medication</label>
                    <div class="select-wrapper">
                        
                        <select asp-for="MedicationId"
                                class="form-control"
                                asp-items="Model.MedicationList"
                                id="MedicationId"
                                onchange="updateSchedule(this)">
                            <option value="">-- Select Medication --</option>
                        </select>

                        <span asp-validation-for="MedicationId" class="text-danger"></span>
                    </div>
                </div>
               

                @* <div class="form-group-custom" id="prescriptionField" style="display:none;">
                    
                    <label asp-for="PrescriptionId">Select Prescription</label>
                    <select asp-for="PrescriptionId" class="form-control" id="PrescriptionSelect">
                        <option value="">-- Select Prescription --</option>
                    </select>
                    <span asp-validation-for="PrescriptionId" class="text-danger"></span>
                </div> *@
                <div class="form-group-custom" id="prescriptionField" style="@(Model.RequiresPrescription ? "" : "display:none;")">
    @if (Model.RequiresPrescription)
    {
        if (Model.PrescriptionList != null && Model.PrescriptionList.Any())
        {
            if (Model.PrescriptionList.Count() == 1 && Model.PrescriptionId.HasValue)
            {
                <input type="hidden" asp-for="PrescriptionId" value="@Model.PrescriptionId" />
                <div class="alert alert-info">
                    <i class="fas fa-check-circle"></i> 
                    Auto-selected Prescription: @Model.PrescriptionList.First().Text
                </div>
            }
            else
            {
                <label asp-for="PrescriptionId">Select Prescription</label>
                <select asp-for="PrescriptionId" class="form-control" asp-items="Model.PrescriptionList">
                    <option value="">-- Select Prescription --</option>
                </select>
                <span asp-validation-for="PrescriptionId" class="text-danger"></span>
            }
        }
        else
        {
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-triangle"></i>
                ❌ This medication requires a prescription, but no approved prescription was found.
            </div>
        }
    }
</div>

                @* <div class="form-group-custom">
                    <label asp-for="Dosage"></label>
                    <input asp-for="Dosage" class="form-control" />
                    <span asp-validation-for="Dosage" class="text-danger"></span>
                </div> *@
                <div class="form-group-custom">
                    <label asp-for="Dosage"></label>
                    <input asp-for="Dosage" class="form-control" id="Dosage" /> <!-- Ensure this ID exists -->
                    <span asp-validation-for="Dosage" class="text-danger"></span>

                    <!-- Optional: Show message when dosage is auto-filled -->
                    <div id="dosageAutoFillMessage" class="text-success" style="display: none; font-size: 12px; margin-top: 5px;">
                        <i class="fas fa-check-circle"></i> Dosage auto-filled from prescription
                    </div>
                </div>

                <div class="form-group-custom">
                    <label asp-for="AdministeredDate"></label>
                    <input asp-for="AdministeredDate" type="datetime-local" class="form-control" />
                    <span asp-validation-for="AdministeredDate" class="text-danger"></span>
                </div>

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-save" ><i class="fas fa-check-circle" style="margin-right:8px;"></i>Save</button>
                    <a asp-action="patientsList" class="btn btn-back">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .medication-form-container {
        background: url('/images/background3.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        min-height: 100vh;
        padding: 30px 0;
    }

    .form-header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        text-align: center;
        width: 62%;
        margin: auto;
        margin-bottom: 10px;
    }

    .medication-form-card {
        background: rgba(255, 255, 255, 0.98);
        backdrop-filter: blur(15px);
        border-radius: 25px;
        padding: 40px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.3);
        max-width: 700px;
        margin: 0 auto;
    }

    .patient-info-card {
        background: linear-gradient(135deg, #17a2b8 0%, #007bff 100%);
        color: white;
        padding: 25px;
        border-radius: 15px;
        margin-bottom: 35px;
        text-align: center;
        box-shadow: 0 8px 25px rgba(23, 162, 184, 0.3);
    }

    .safety-warning {
        background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
        border: 2px solid #f39c12;
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 30px;
        position: relative;
        overflow: hidden;
    }

        .safety-warning::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: #f39c12;
        }

        .safety-warning h4 {
            color: #856404;
            font-weight: 700;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }

        .safety-warning p {
            color: #856404;
            margin: 0;
            font-weight: 500;
            font-size: 14px;
        }

    .form-group-custom {
        margin-bottom: 30px;
        position: relative;
    }

    .form-label-custom {
        display: flex;
        align-items: center;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 12px;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .medication-icon {
        width: 20px;
        height: 20px;
        margin-right: 10px;
        opacity: 0.8;
    }

    .form-control-custom {
        border: 2px solid #e9ecef;
        border-radius: 12px;
        padding: 15px 20px;
        font-size: 16px;
        font-weight: 500;
        background: #f8faff;
        transition: all 0.3s ease;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        width: 100%;
    }

        .form-control-custom:focus {
            border-color: #17a2b8;
            background: white;
            box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.15), 0 4px 20px rgba(23, 162, 184, 0.1);
            outline: none;
        }

        .form-control-custom:valid:not(:placeholder-shown) {
            border-color: #28a745;
            background: #f8fff9;
        }

        .form-control-custom:disabled,
        .form-control-custom[readonly] {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            color: #6c757d;
            font-weight: 600;
        }

    .select-wrapper {
        position: relative;
    }

        .select-wrapper::after {
            content: "▼";
            position: absolute;
            top: 50%;
            right: 15px;
            transform: translateY(-50%);
            color: #6c757d;
            pointer-events: none;
            font-size: 12px;
        }

    select.form-control-custom {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        padding-right: 45px;
        cursor: pointer;
    }

        select.form-control-custom:valid {
            border-color: #17a2b8;
            background: #f0f9ff;
        }

    .dosage-input-group {
        position: relative;
    }

    .dosage-unit {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
        font-weight: 600;
        font-size: 14px;
        pointer-events: none;
    }

    .dosage-input {
        padding-right: 60px;
    }

        .dosage-input:valid {
            border-color: #28a745;
            background: #f8fff9;
        }

    .date-input-wrapper {
        position: relative;
    }

        .date-input-wrapper::before {
            content: "📅";
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 16px;
            pointer-events: none;
            z-index: 1;
        }

    .date-input {
        padding-left: 50px;
    }

        .date-input:valid {
            border-color: #f39c12;
            background: #fff9f0;
        }

    .btn-save {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        border: none;
        color: white;
        padding: 15px 40px;
        border-radius: 25px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
        box-shadow: 0 6px 20px rgba(40, 167, 69, 0.3);
        margin-right: 15px;
    }

        .btn-save:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(40, 167, 69, 0.4);
            color: white;
        }

    .btn-back {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        border: none;
        color: white;
        padding: 15px 40px;
        border-radius: 25px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
        box-shadow: 0 6px 20px rgba(108, 117, 125, 0.3);
    }

        .btn-back:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(108, 117, 125, 0.4);
            color: white;
        }

    /* .text-danger {
            color: #e74c3c !important;
            font-weight: 500;
            font-size: 13px;
            margin-top: 8px;
            display: flex;
            align-items: center;
            padding: 8px 12px;
            background: rgba(231, 76, 60, 0.1);
            border-radius: 8px;
            border-left: 3px solid #e74c3c;
        }

            .text-danger:before {
                content: "⚠";
                margin-right: 8px;
                font-size: 14px;
            } */

    .page-title {
        color: #2c3e50;
        font-weight: 700;
        margin-bottom: 10px;
        font-size: 2rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    }

    .form-hint {
        font-size: 12px;
        color: #6c757d;
        margin-top: 5px;
        font-style: italic;
        display: flex;
        align-items: center;
    }

    .double-check-box {
        background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
        border: 2px solid #dc3545;
        border-radius: 12px;
        padding: 20px;
        margin: 20px 0;
        text-align: center;
    }

        .double-check-box h5 {
            color: #721c24;
            font-weight: 700;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

    .verification-checklist {
        text-align: left;
        color: #721c24;
        font-weight: 500;
        margin: 0;
        padding-left: 0;
        list-style: none;
    }

        .verification-checklist li {
            margin-bottom: 8px;
            display: flex;
            align-items: center;
        }

            .verification-checklist li::before {
                content: "✓";
                margin-right: 8px;
                color: #dc3545;
                font-weight: bold;
                font-size: 14px;
            }

    .current-date-info {
        background: #e8f5e8;
        border: 1px solid #28a745;
        border-radius: 8px;
        padding: 8px 12px;
        margin-top: 8px;
        font-size: 12px;
        color: #155724;
        display: flex;
        align-items: center;
    }

    .btn-disabled {
        background: #6c757d !important;
        cursor: not-allowed;
        opacity: 0.7;
    }

    @@media (max-width: 768px) {
        .medication-form-card {
            padding: 25px;
            margin: 0 15px;
        }

        .btn-save, .btn-back {
            width: 100%;
            margin-bottom: 10px;
            margin-right: 0;
        }
    }

    .toast-message {
        position: fixed;
        top: 20px;
        right: 20px;
        background: #dc3545;
        color: white;
        padding: 15px 25px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        opacity: 0;
        transition: opacity 0.5s ease;
        z-index: 9999;
        font-weight: 600;
    }
</style>



<script>
           function updateSchedule(select) {
        const selected = select.options[select.selectedIndex];
        const schedule = parseInt(selected.text.match(/Schedule (\d+)/)?.[1] || 0);
        const prescriptionField = document.getElementById('prescriptionField');
        const dosageInput = document.getElementById('Dosage');

        if (schedule > 4) {
            prescriptionField.style.display = 'block';

            const patientId = @Model.PatientId;
            const medicationId = select.value;

            // Only fetch if medication is selected
            if (medicationId) {
                fetch(`/NurseSister/GetPrescriptions?patientId=${patientId}&medicationId=${medicationId}`)
                    .then(response => {
                        if (!response.ok) throw new Error('Network response was not ok');
                        return response.json();
                    })
                    .then(data => {
                        console.log('Prescriptions loaded:', data);

                        // Update UI based on prescription count
                        if (data.length === 0) {
                            prescriptionField.innerHTML = `
                                <div class="alert alert-danger">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    ❌ No approved prescriptions found for this medication.
                                </div>`;
                        } else if (data.length === 1) {
                            // Auto-select single prescription
                            prescriptionField.innerHTML = `
                                <input type="hidden" name="PrescriptionId" value="${data[0].prescriptionId}" />
                                <div class="alert alert-info">
                                    <i class="fas fa-check-circle"></i>
                                    Auto-selected Prescription #${data[0].prescriptionId}
                                </div>`;

                                // Auto-fill dosage from prescription
                        if (data[0].dosage) {
                            dosageInput.value = data[0].dosage;
                            showToast(`✅ Dosage auto-filled from prescription: ${data[0].dosage}`);}
                        } else {
                            // Show dropdown for multiple prescriptions
                            let options = '<option value="">-- Select Prescription --</option>';
                            data.forEach(p => {
                                options += `<option value="${p.prescriptionId}">Prescription #${p.prescriptionId}</option>`;
                            });

                            prescriptionField.innerHTML = `
                                <label for="PrescriptionId">Select Prescription</label>
                                <select name="PrescriptionId" class="form-control" required>${options}</select>
                                <span class="text-danger field-validation-valid" data-valmsg-for="PrescriptionId" data-valmsg-replace="true"></span>`;

                                // Add event listener for prescription selection changes
                        const prescriptionSelect = document.getElementById('PrescriptionSelect');
                        prescriptionSelect.addEventListener('change', function() {
                            const selectedOption = this.options[this.selectedIndex];
                            const dosage = selectedOption.getAttribute('data-dosage');
                            if (dosage) {
                                dosageInput.value = dosage;
                                showToast(`✅ Dosage auto-filled from prescription: ${dosage}`);
                            }
                        });
                        }
                    })
                    .catch(err => {
                        console.error("Error loading prescriptions:", err);
                        prescriptionField.innerHTML = `
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle"></i>
                                Error loading prescriptions. Please try again.
                            </div>`;
                    });
            }
        } else {
            prescriptionField.style.display = 'none';
            prescriptionField.innerHTML = ''; // Clear prescription content
            // Clear dosage if not needed
            dosageInput.value = '';
        }

        // Also check for allergies
        checkAllergy(select);

            function showToast(message) {
        // Create toast element
        var toast = document.createElement('div');
        toast.className = 'toast-message';
        toast.style.background = '#28a745'; // Green for success
        toast.innerText = message;
        document.body.appendChild(toast);

        // Animate and remove after 3 seconds
        setTimeout(function() {
            toast.style.opacity = '1';
            setTimeout(function() {
                toast.style.opacity = '0';
                setTimeout(function() {
                    document.body.removeChild(toast);
                }, 500);
            }, 2500);
        }, 100);
    }
    }
</script>


@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}