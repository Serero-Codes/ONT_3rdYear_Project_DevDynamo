@model ONT_3rdyear_Project.ViewModels.AdministerMedicationViewModel

@{
    ViewData["Title"] = "Administer Medication";
}

@{
    if (Model?.MedicationList == null)
    {
        <div class="alert alert-danger">MedicationList is NULL!</div>
    }


}


<div class="container mt-4">
    <h2>Administer Medication</h2>

    <form asp-action="CreateAdminister" method="post">
        <input type="hidden" asp-for="PatientId" />


        <div class="form-group">
            <label>Patient</label>
            <input type="text" class="form-control" value="@Model.PatientName" readonly />
        </div>

        <div class="form-group">
            <label asp-for="MedicationId"></label>
            <select asp-for="MedicationId"
                    class="form-control"
                    asp-items="Model.MedicationList"
                    id="MedicationId"
                    onchange="updateSchedule(this)">
                <option value="">-- Select Medication --</option>
            </select>

            <span asp-validation-for="MedicationId" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="ApplicationUserID">Administered By</label>
            <select asp-for="ApplicationUserID" class="form-control" asp-items="Model.UserList" disabled></select>
            <input type="hidden" asp-for="ApplicationUserID" />
            <span asp-validation-for="ApplicationUserID" class="text-danger"></span>
        </div>


        @*  <div id="prescriptionField" style="display:none;" class="form-group">
            <label asp-for="PrescriptionNote">Prescription Note</label>
            <textarea asp-for="PrescriptionNote" class="form-control"></textarea>
            <span asp-validation-for="PrescriptionNote" class="text-danger"></span>
        </div> *@
        <div class="form-group" id="prescriptionField" style="display:none;">
            <label asp-for="PrescriptionId">Select Prescription</label>
            <select asp-for="PrescriptionId" class="form-control" id="PrescriptionSelect">
                <option value="">-- Select Prescription --</option>
            </select>
            <span asp-validation-for="PrescriptionId" class="text-danger"></span>
        </div>


        <div class="form-group">
            <label asp-for="Dosage"></label>
            <input asp-for="Dosage" class="form-control" />
            <span asp-validation-for="Dosage" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="AdministeredDate"></label>
            <input asp-for="AdministeredDate" type="date" class="form-control" />
            <span asp-validation-for="AdministeredDate" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-success mt-4 mb-5">Save</button>
        <a asp-action="patientsList" class="btn btn-secondary mt-4 mb-5">Cancel</a>
    </form>
</div>

<script>
        function updateSchedule(select) {
        const selected = select.options[select.selectedIndex];
        const schedule = parseInt(selected.text.match(/Schedule (\d+)/)?.[1] || 0);

        const prescriptionField = document.getElementById('prescriptionField');
        const prescriptionSelect = document.getElementById('PrescriptionSelect');

        if (schedule > 4) {
            prescriptionField.style.display = 'block';
            prescriptionSelect.setAttribute('required', 'required');

            const patientId = @Model.PatientId;

            fetch(`/NurseSister/GetPrescriptions?patientId=${patientId}&medicationId=${select.value}`)
                .then(response => response.json())
                .then(data => {
                    prescriptionSelect.innerHTML = '<option value="">-- Select Prescription --</option>';
                    data.forEach(p => {
                        const opt = document.createElement('option');
                             opt.value = p.prescriptionId;
                             opt.text = "Prescription #" + p.prescriptionId;

                         //opt.text = `#${p.PrescriptionId} - ${p.PrescriptionInstruction}`;
                         prescriptionSelect.appendChild(opt);
                    });
                })
                .catch(err => console.error("Error loading prescriptions:", err));

        } else {
            prescriptionField.style.display = 'none';
            prescriptionSelect.removeAttribute('required');
            prescriptionSelect.value = "";
        }
    }


    window.onload = function () {
        const select = document.getElementById("MedicationId");
        if (select) updateSchedule(select);
    };
</script>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}